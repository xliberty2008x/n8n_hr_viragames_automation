{
    "nodes": [
      {
        "parameters": {
          "jsCode": "const notionDepartments = items[0].json.notionDepartments;\nconst ttDepartments = items[0].json.ttDepartments;\n\n// Множества для быстрого поиска\nconst ttNamesSet = new Set(ttDepartments.map(dep => dep.normalizedName.trim()));\nconst notionNamesSet = new Set(notionDepartments.map(dep => dep.normalizedName.trim()));\n\n// Совпадающие департаменты (есть и там, и там)\nconst matchedDepartments = notionDepartments\n  .filter(dep => ttNamesSet.has(dep.normalizedName.trim()))\n  .map(dep => ({ notionId: dep.id, name: dep.name }));\n\n// Только в Notion (нет в TT)\nconst onlyInNotion = notionDepartments\n  .filter(dep => !ttNamesSet.has(dep.normalizedName.trim()))\n  .map(dep => ({ notionId: dep.id, name: dep.name }));\n\n// Только в Teamtailor (нет в Notion)\nconst onlyInTeamtailor = ttDepartments\n  .filter(dep => !notionNamesSet.has(dep.normalizedName.trim()))\n  .map(dep => ({ ttId: dep.id, name: dep.name }));\n\n// Флаги\nconst isNotionExtraEmpty = onlyInNotion.length === 0;\nconst isTeamtailorExtraEmpty = onlyInTeamtailor.length === 0;\nconst isAllMatched = isNotionExtraEmpty && isTeamtailorExtraEmpty;\n\nreturn [{\n  status: isAllMatched ? 'OK' : 'ERROR',\n  isAllMatched,\n  matchedDepartments,   // [{ notionId, name }]\n  onlyInNotion,         // [{ notionId, name }]\n  onlyInTeamtailor,     // [{ ttId, name }]\n  isNotionExtraEmpty,\n  isTeamtailorExtraEmpty\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          192,
          -176
        ],
        "id": "168232c6-a830-4291-981c-54cf7c2d5299",
        "name": "Comparison data (departments)"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "getAll",
          "databaseId": {
            "__rl": true,
            "value": "=https://www.notion.so/1919748bc8c280aebe0dc64d01a2e3ac",
            "mode": "url"
          },
          "returnAll": true,
          "filterType": "manual",
          "filters": {
            "conditions": [
              {
                "key": "Parent item|relation",
                "condition": "is_not_empty"
              },
              {
                "key": "Status|status",
                "condition": "equals",
                "statusValue": "Verified"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          -224,
          -176
        ],
        "id": "7fda4a1a-5665-4aae-b357-2f09b329270e",
        "name": "Get Notion Department",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "let url = 'https://api.teamtailor.com/v1/departments?page[size]=30';\nlet allDepartments = [];\nlet pageCount = 0;\nlet total = 0;\n\nfunction cleanupDepartments(data) {\n  return data.map(dep => ({\n    id: dep.id,\n    name: dep.attributes?.name || \"\",\n    normalizedName: (dep.attributes?.name || \"\").trim().toLowerCase()\n  }));\n}\n\nwhile (url) {\n  try {\n    const response = await this.helpers.request({\n      method: 'GET',\n      url,\n      json: true,\n      headers: {\n        'Authorization': 'Token token=w2JQbintRdIGcNO1SDG_ekxpJxvYvGIgE51Q8IAE',\n        'X-Api-Version': '20240904',\n        'Accept': 'application/vnd.api+json'\n      }\n    });\n\n    if (response?.data?.length) {\n      allDepartments = allDepartments.concat(cleanupDepartments(response.data));\n    }\n    total = response?.meta?.[\"record-count\"] || total;\n    pageCount = response?.meta?.[\"page-count\"] || pageCount;\n\n    url = response?.links?.next ? response.links.next : null;\n  } catch (error) {\n    return [{\n      json: {\n        error: error.message,\n        departments: allDepartments,\n        total,\n        pageCount,\n        done: false\n      }\n    }];\n  }\n}\n\nreturn [{\n  json: {\n    departments: allDepartments,\n    total,\n    pageCount,\n    done: true\n  }\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -416,
          -176
        ],
        "id": "ce10ae2e-700e-41eb-8a1b-02b57b1987bb",
        "name": "HTTP Team Tailor - Get All Departments"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json[\"isAllMatched\"] }}",
                      "rightValue": "",
                      "operator": {
                        "type": "boolean",
                        "operation": "true",
                        "singleValue": true
                      },
                      "id": "d4da62d0-8a6e-462d-9360-6f51b93d24f3"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "All Good"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "7d336dd3-9caa-4e29-9b67-c4c581533e4d",
                      "leftValue": "={{ $item(\"0\").$node[\"Comparison data (departments)\"].json[\"isNotionExtraEmpty\"] }}",
                      "rightValue": "",
                      "operator": {
                        "type": "boolean",
                        "operation": "false",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Notion have Extra Item"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          368,
          -176
        ],
        "id": "f1595c5d-c669-46d7-be71-c076df09ceef",
        "name": "Switch"
      },
      {
        "parameters": {
          "jsCode": "const onlyInNotion = items[0].json.onlyInNotion || [];\nreturn onlyInNotion.map(dep => ({ json: dep }));\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          592,
          -160
        ],
        "id": "0465ecaa-6529-4adb-b95c-538c1a333468",
        "name": "All Extra Notion Department"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $json.notionId }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          784,
          -160
        ],
        "id": "8291967c-d4ec-4183-964b-1223762b3540",
        "name": "Get Department info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.teamtailor.com/v1/departments",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"departments\",\n    \"attributes\": {\n      \"name\": \"{{ $node[\"Get Department info\"].json[\"name\"] }}\"\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          992,
          -160
        ],
        "id": "49f714dd-b28b-487c-a351-7319fc71c913",
        "name": "HTTP Request - Create new Department",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Жестко прописанный companyId (ваш постоянный)\nconst companyId = \"6m5KynaH2o4\";\n\n// Парсим ответ Teamtailor\nconst raw = items[0].json.data;\nconst parsed = typeof raw === \"string\" ? JSON.parse(raw) : raw;\n\nconst departmentId = parsed.data.id;\nconst departmentName = parsed.data.attributes?.name || \"\";\nconst deptApiLink = parsed.data.links.self;\n\n// Человеческая ссылка для Teamtailor:\nconst teamtailorUrl = `https://app.teamtailor.com/companies/${companyId}/settings/organization/departments/edit/${departmentId}`;\n\nreturn [{\n  json: {\n    departmentId,                    // <-- добавил ID\n    departmentUrl: deptApiLink,      // API-ссылка\n    teamtailorUrl,                   // ссылка для браузера\n    departmentName                   // имя департамента\n  }\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1184,
          -160
        ],
        "id": "e687cd97-5b4e-484b-a1aa-f202c45b883c",
        "name": "Get Link"
      },
      {
        "parameters": {
          "jsCode": "const onlyInTeamtailor = items[0].json.onlyInTeamtailor || [];\nreturn onlyInTeamtailor.map(dep => ({ json: dep }));\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          608,
          32
        ],
        "id": "1cd3595b-6ab5-46c3-b38b-944ddcf1ccf7",
        "name": "All Extra TeamTailor Department",
        "disabled": true
      },
      {
        "parameters": {
          "url": "=https://api.teamtailor.com/v1/departments/{{$json.ttId}}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          992,
          32
        ],
        "id": "5c609b68-f19c-4fd8-a227-cbe62378b42a",
        "name": "HTTP - Get Department info",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "jsCode": "const companyId = \"6m5KynaH2o4\";\nconst inputItems = $input.all();\n\nreturn inputItems.map(item => {\n  let parsed = {};\n  try {\n    parsed = JSON.parse(item.json.data);\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const manager_links = parsed.data?.relationships?.manager?.links || null;\n  const roles_links = parsed.data?.relationships?.roles?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const deptApiLink = parsed.data?.links?.self || null;\n\n  // Человеческая ссылка для Teamtailor UI\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/departments/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      manager_links,\n      roles_links,\n      teams_links,\n      departmentUrl: deptApiLink,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1184,
          32
        ],
        "id": "709b532f-c0c3-4ce9-8d06-8d7995d748c4",
        "name": "TT Department Parser info",
        "disabled": true
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "update",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get Department info\"].json[\"id\"] }}",
            "mode": "id"
          },
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_department_id|rich_text",
                "textContent": "={{ $json.departmentId }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1392,
          -160
        ],
        "id": "567e6571-59cd-42ba-9f83-73cf1d7a968a",
        "name": "Notion - Add tt_department_id",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "databaseId": {
            "__rl": true,
            "value": "1919748b-c8c2-80ae-be0d-c64d01a2e3ac",
            "mode": "list",
            "cachedResultName": "Departments",
            "cachedResultUrl": "https://www.notion.so/1919748bc8c280aebe0dc64d01a2e3ac"
          },
          "title": "={{ $json.name }}",
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "Status|status",
                "statusValue": "New"
              },
              {
                "key": "tt_department_id|rich_text",
                "textContent": "={{ $json.id }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1392,
          32
        ],
        "id": "ab205818-ce84-462b-af0f-eed09bb31716",
        "name": "Notion - Create Department",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "jsCode": "let url = 'https://api.teamtailor.com/v1/roles?page[size]=30';\nlet allRoles = [];\nlet pageCount = 0;\nlet total = 0;\n\nfunction cleanupRoles(data) {\n  return data.map(role => ({\n    id: role.id,\n    name: role.attributes?.name || \"\",\n    normalizedName: (role.attributes?.name || \"\").trim().toLowerCase()\n  }));\n}\n\nwhile (url) {\n  try {\n    const response = await this.helpers.request({\n      method: 'GET',\n      url,\n      json: true,\n      headers: {\n        'Authorization': 'Token token=w2JQbintRdIGcNO1SDG_ekxpJxvYvGIgE51Q8IAE',\n        'X-Api-Version': '20240904',\n        'Accept': 'application/vnd.api+json'\n      }\n    });\n\n    if (response?.data?.length) {\n      allRoles = allRoles.concat(cleanupRoles(response.data));\n    }\n    total = response?.meta?.[\"record-count\"] || total;\n    pageCount = response?.meta?.[\"page-count\"] || pageCount;\n\n    url = response?.links?.next ? response.links.next : null;\n  } catch (error) {\n    return [{\n      json: {\n        error: error.message,\n        roles: allRoles,\n        total,\n        pageCount,\n        done: false\n      }\n    }];\n  }\n}\n\nreturn [{\n  json: {\n    roles: allRoles,\n    total,\n    pageCount,\n    done: true\n  }\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2384,
          -160
        ],
        "id": "a1d1e166-4de9-42b3-9ee8-7f3a5b40b9c0",
        "name": "HTTP Team Tailor - Get All Roles"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "getAll",
          "databaseId": {
            "__rl": true,
            "value": "18b9748b-c8c2-8019-ab80-eee98eac3269",
            "mode": "list",
            "cachedResultName": "Roles and Responsibilities",
            "cachedResultUrl": "https://www.notion.so/18b9748bc8c28019ab80eee98eac3269"
          },
          "returnAll": true,
          "filterType": "manual",
          "matchType": "allFilters",
          "filters": {
            "conditions": [
              {
                "key": "Status|status",
                "condition": "equals",
                "statusValue": "Verified"
              },
              {
                "key": "=title|title",
                "condition": "does_not_contain",
                "titleValue": "CEO"
              },
              {
                "key": "=title|title",
                "condition": "does_not_equal",
                "titleValue": "COO"
              },
              {
                "key": "=title|title",
                "condition": "does_not_equal",
                "titleValue": "CTO"
              },
              {
                "key": "=title|title",
                "condition": "does_not_equal",
                "titleValue": "CMO"
              },
              {
                "key": "=title|title",
                "condition": "does_not_equal",
                "titleValue": "Role Description Template"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          2592,
          -160
        ],
        "id": "de6e6643-eaf0-417e-a888-caf70892a43a",
        "name": "Get Notion Roles",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "function stripEmojis(str) {\n  // Удаляет любые emoji, в том числе составные и zero width joiner (Unicode property escapes)\n  return str.replace(/\\p{Emoji_Presentation}|\\p{Emoji}\\uFE0F|\\p{Extended_Pictographic}/gu, \"\")\n    .replace(/[\\u200D\\uFE0F]/g, \"\");\n}\n\nfunction normalize(str) {\n  if (typeof str !== \"string\") return \"\";\n  str = stripEmojis(str);\n  str = str.normalize(\"NFKD\");\n  return str\n    .replace(/[^a-z0-9 ]/gi, \"\")\n    .replace(/\\s+/g, \" \")\n    .trim()\n    .toLowerCase();\n}\n\n// 1. Получаем роли из Notion\nconst notionItems = $(\"Get Notion Roles\").all();\nconst rawNotion = notionItems.map(item => item.json);\n\n// 2. Фильтруем Notion — нет пустых normalizedName, нет шаблонов\nconst cleanedNotion = rawNotion\n  .map(role => {\n    const originalName = (role.name || \"\").trim();\n    const name = stripEmojis(originalName).trim(); // Теперь реально всё уберёт!\n    const normalizedName = normalize(originalName);\n    if (\n      !normalizedName ||\n      name.replace(/\\s+/g, \" \").trim().toLowerCase() === \"role description template\"\n    ) return null;\n    return {\n      id: role.id,\n      name,\n      url: role.url || \"\",\n      status: role.status || \"\",\n      tt_role_id: role.tt_role_id || \"\",\n      normalizedName\n    };\n  })\n  .filter(Boolean);\n\n// 3. Получаем роли из TeamTailor (твоей ноды)\nconst ttItems = $(\"HTTP Team Tailor - Get All Roles\").all();\nconst rawTT = ttItems\n  .map(item => item.json.roles || [])\n  .flat();\n\n// 4. Фильтруем TT — нет пустых normalizedName, нет шаблонов\nconst cleanedTT = rawTT\n  .map(tt => {\n    const originalName = (tt.name || \"\").trim();\n    const name = stripEmojis(originalName).trim();\n    const normalizedName = normalize(originalName);\n    if (\n      !normalizedName ||\n      name.replace(/\\s+/g, \" \").trim().toLowerCase() === \"role description template\"\n    ) return null;\n    return {\n      id: tt.id,\n      name,\n      normalizedName\n    };\n  })\n  .filter(Boolean);\n\n// 5. Метаданные TeamTailor — берем из первого item, если нужно\nconst ttMeta = ttItems.length ? ttItems[0].json : {};\n\n// 6. Возвращаем результат\nreturn [\n  {\n    json: {\n      notionRoles: cleanedNotion,\n      ttRoles: cleanedTT,\n      ttTotal: ttMeta.total,\n      ttPageCount: ttMeta.pageCount,\n      ttDone: ttMeta.done\n    }\n  }\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2784,
          -160
        ],
        "id": "21573be2-14b7-47f3-b65d-0b343cf4662f",
        "name": "Clean Data from Notion and TT (Roles)"
      },
      {
        "parameters": {
          "jsCode": "function normalize(str) {\n  if (typeof str !== \"string\") return \"\";\n  return str\n    .trim()\n    .toLowerCase()\n    .normalize(\"NFKD\")\n    .replace(/[^a-z0-9 ]/g, \"\")\n    .replace(/\\s+/g, \" \");\n}\n\n// 1. Получаем департаменты из Notion\nconst notionItems = $(\"Get Notion Department\").all();\nconst rawNotion = notionItems.map(item => item.json);\n\n// 2. Приводим Notion к нужному виду\nconst cleanedNotion = rawNotion.map(dep => ({\n  id: dep.id,\n  name: dep.name || dep.property_position || \"\",\n  url: dep.url || \"\",\n  status: dep.property_status || dep.Status || \"\",\n  tt_department_id: dep.property_tt_department_id || \"\",\n  normalizedName: normalize(dep.name || dep.property_position || \"\")\n}));\n\n// 3. Получаем департаменты из TeamTailor (твоей ноды)\nconst ttItems = $(\"HTTP Team Tailor - Get All Departments\").all();\nconst rawTT = ttItems\n  .map(item => item.json.departments || [])\n  .flat();\n\n// 4. Приводим TT к нужному виду\nconst cleanedTT = rawTT.map(tt => ({\n  id: tt.id,\n  name: tt.name || \"\",\n  normalizedName: normalize(tt.name || \"\")\n}));\n\n// 5. (По желанию) Метаданные TeamTailor — берем из первого item, если нужно\nconst ttMeta = ttItems.length ? ttItems[0].json : {};\n\n// 6. Возвращаем результат\nreturn [\n  {\n    json: {\n      notionDepartments: cleanedNotion,\n      ttDepartments: cleanedTT,\n      ttTotal: ttMeta.total,\n      ttPageCount: ttMeta.pageCount,\n      ttDone: ttMeta.done\n    }\n  }\n];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -16,
          -176
        ],
        "id": "2347b89f-1f63-470c-8dcb-0073ae7937ad",
        "name": "Clean Data from Notion and TT (Department)"
      },
      {
        "parameters": {
          "jsCode": "const notionRoles = items[0].json.notionRoles;\nconst ttRoles = items[0].json.ttRoles;\n\n// Множества для быстрого поиска\nconst ttNamesSet = new Set(ttRoles.map(role => role.normalizedName.trim()));\nconst notionNamesSet = new Set(notionRoles.map(role => role.normalizedName.trim()));\n\n// Совпадающие роли (есть и там, и там)\nconst matchedRoles = notionRoles\n  .filter(role => ttNamesSet.has(role.normalizedName.trim()))\n  .map(role => ({ notionId: role.id, name: role.name }));\n\n// Только в Notion (нет в TT)\nconst onlyInNotion = notionRoles\n  .filter(role => !ttNamesSet.has(role.normalizedName.trim()))\n  .map(role => ({ notionId: role.id, name: role.name }));\n\n// Только в Teamtailor (нет в Notion)\nconst onlyInTeamtailor = ttRoles\n  .filter(role => !notionNamesSet.has(role.normalizedName.trim()))\n  .map(role => ({ ttId: role.id, name: role.name }));\n\n// Флаги\nconst isNotionExtraEmpty = onlyInNotion.length === 0;\nconst isTeamtailorExtraEmpty = onlyInTeamtailor.length === 0;\nconst isAllMatched = isNotionExtraEmpty && isTeamtailorExtraEmpty;\n\nreturn [{\n  status: isAllMatched ? 'OK' : 'ERROR',\n  isAllMatched,\n  matchedRoles,          // [{ notionId, name }]\n  onlyInNotion,          // [{ notionId, name }]\n  onlyInTeamtailor,      // [{ ttId, name }]\n  isNotionExtraEmpty,\n  isTeamtailorExtraEmpty\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          2992,
          -160
        ],
        "id": "3571996f-0290-492d-85b0-51cb86decd50",
        "name": "Comparison data (Roles)"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json[\"isAllMatched\"] }}",
                      "rightValue": "",
                      "operator": {
                        "type": "boolean",
                        "operation": "true",
                        "singleValue": true
                      },
                      "id": "d4da62d0-8a6e-462d-9360-6f51b93d24f3"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "All Good"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "7d336dd3-9caa-4e29-9b67-c4c581533e4d",
                      "leftValue": "={{ $json[\"isNotionExtraEmpty\"] }}",
                      "rightValue": "",
                      "operator": {
                        "type": "boolean",
                        "operation": "true",
                        "singleValue": true
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Notion have Extra Item"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          3168,
          -160
        ],
        "id": "9bbfc7d0-4b81-4cae-a930-2b95d99ab16c",
        "name": "Switch1"
      },
      {
        "parameters": {
          "jsCode": "const onlyInNotionRoles = items[0].json.onlyInNotion || [];\nreturn onlyInNotionRoles.map(role => ({ json: role }));\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          3408,
          -144
        ],
        "id": "688f88ec-dfa3-4da8-96ca-ff3f4d1df524",
        "name": "All Extra Notion Role"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $json[\"notionId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          3584,
          -144
        ],
        "id": "ccc9c148-7930-45cc-8437-8f27c43552fd",
        "name": "Get role info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.teamtailor.com/v1/roles",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"{{ $node[\"Get role info\"].json[\"name\"] }}\"\n    },\n    \"relationships\": {\n      \"department\": {\n        \"data\": {\n          \"type\": \"departments\",\n          \"id\": \"{{ $node[\"Get role-department info\"].json[\"property_tt_department_id\"] }}\"\n        }\n      }\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          3984,
          -144
        ],
        "id": "a378b2c2-024a-4a6d-add2-504d111bd1e1",
        "name": "HTTP Request - Create new Role",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $json[\"property_department\"][\"0\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          3792,
          -144
        ],
        "id": "e9e314de-bf3d-4446-82f6-bd2294155c7b",
        "name": "Get role-department info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const inputItems = $input.all();\nconst companyId = \"6m5KynaH2o4\";\n\nreturn inputItems.map(item => {\n  // Парсим JSON из строки (!!!)\n  let parsed = {};\n  try {\n    parsed = typeof item.json.data === \"string\"\n      ? JSON.parse(item.json.data)\n      : item.json.data;\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const roleUrl = parsed.data?.links?.self || null;\n  const department_links = parsed.data?.relationships?.department?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/roles/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      department_links,\n      teams_links,\n      roleUrl,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          4192,
          -144
        ],
        "id": "38991123-7fd1-4991-8d60-3a5802137e82",
        "name": "TT New Role Parser"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "update",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get role info\"].json[\"id\"] }}",
            "mode": "id"
          },
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_role_id|rich_text",
                "textContent": "={{ $json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          4384,
          -144
        ],
        "id": "ebc57be7-cb56-4bef-aa74-d1d65249ce5b",
        "name": "Notion - Add tt_role_id",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const onlyInTeamtailor = items[0].json.onlyInTeamtailor || [];\nreturn onlyInTeamtailor.map(dep => ({ json: dep }));\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          3408,
          32
        ],
        "id": "1b6638c4-6fa9-4714-bc22-0b4c2dbef693",
        "name": "All Extra TeamTailor Role",
        "disabled": true
      },
      {
        "parameters": {
          "url": "=https://api.teamtailor.com/v1/roles/{{$json.ttId}}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          3584,
          32
        ],
        "id": "aaa219cd-0422-4a96-9d85-d6593c749cff",
        "name": "HTTP - Get Role info",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "jsCode": "const inputItems = $input.all();\nconst companyId = \"6m5KynaH2o4\";\n\nreturn inputItems.map(item => {\n  // Парсим JSON из строки (!!!)\n  let parsed = {};\n  try {\n    parsed = typeof item.json.data === \"string\"\n      ? JSON.parse(item.json.data)\n      : item.json.data;\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const roleUrl = parsed.data?.links?.self || null;\n  const department_links = parsed.data?.relationships?.department?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/roles/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      department_links,\n      teams_links,\n      roleUrl,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          3792,
          32
        ],
        "id": "fac9ce47-b774-4638-a83e-b9ed45d4983d",
        "name": "TT Role Parser info",
        "disabled": true
      },
      {
        "parameters": {
          "resource": "databasePage",
          "databaseId": {
            "__rl": true,
            "value": "18b9748b-c8c2-8019-ab80-eee98eac3269",
            "mode": "list",
            "cachedResultName": "Roles and Responsibilities",
            "cachedResultUrl": "https://www.notion.so/18b9748bc8c28019ab80eee98eac3269"
          },
          "title": "={{ $node[\"TT Role Parser info\"].json[\"name\"] }}",
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_role_id|rich_text",
                "textContent": "={{ $node[\"TT Role Parser info\"].json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          4384,
          32
        ],
        "id": "7ebd9168-ca65-4b38-ad18-0ec42f302711",
        "name": "Notion - Create New Role",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "url": "={{ $json[\"department_links\"][\"related\"] }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          3984,
          32
        ],
        "id": "ecdc76b7-a311-4275-bc32-326b593d7316",
        "name": "HTTP - Get Department info1",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "jsCode": "const companyId = \"6m5KynaH2o4\";\nconst inputItems = $input.all();\n\nreturn inputItems.map(item => {\n  let parsed = {};\n  try {\n    parsed = JSON.parse(item.json.data);\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const manager_links = parsed.data?.relationships?.manager?.links || null;\n  const roles_links = parsed.data?.relationships?.roles?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const deptApiLink = parsed.data?.links?.self || null;\n\n  // Человеческая ссылка для Teamtailor UI\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/departments/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      manager_links,\n      roles_links,\n      teams_links,\n      departmentUrl: deptApiLink,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          4192,
          32
        ],
        "id": "837fdaa5-b019-4e27-b0d8-8808188673e0",
        "name": "TT Department Parser info1",
        "disabled": true
      },
      {
        "parameters": {
          "numberInputs": 3
        },
        "type": "n8n-nodes-base.merge",
        "typeVersion": 3.2,
        "position": [
          2192,
          -176
        ],
        "id": "5fb94888-4231-4aa5-889c-5fba17736460",
        "name": "Merge"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "getAll",
          "databaseId": {
            "__rl": true,
            "value": "18b9748b-c8c2-8019-ab80-eee98eac3269",
            "mode": "list",
            "cachedResultName": "Roles and Responsibilities",
            "cachedResultUrl": "https://www.notion.so/18b9748bc8c28019ab80eee98eac3269"
          },
          "returnAll": true,
          "filterType": "manual",
          "matchType": "allFilters",
          "filters": {
            "conditions": [
              {
                "key": "Department|relation",
                "condition": "contains",
                "relationValue": "={{ $node[\"Notion - Add tt_department_id\"].json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1584,
          -160
        ],
        "id": "c01f64af-c7e4-4133-a8e7-b7bccc6224a7",
        "name": "Get Notion New Department Roles",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "method": "PATCH",
          "url": "=https://api.teamtailor.com/v1/roles/{{ $json.property_tt_role_id }}/relationships/department   ",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"departments\",\n    \"id\": \"{{ $node[\"Get Link\"].json[\"departmentId\"] }}\"\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1792,
          -160
        ],
        "id": "e9bb8b0e-f5e7-4eb5-a808-49d0c5dbcd9d",
        "name": "HTTP Request - Add Roles to new Department",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "0160894d-8551-418d-9ee3-d08012fd5956",
                "leftValue": "={{ $json.hasTT_ID }}",
                "rightValue": "",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          -224,
          -896
        ],
        "id": "1288e05c-1bcc-4505-b7eb-01e763551c1e",
        "name": "If - Does have TT ID?"
      },
      {
        "parameters": {
          "httpMethod": "POST",
          "path": "dabce202-e7d4-4034-a5b0-8bc05378cef1",
          "options": {}
        },
        "type": "n8n-nodes-base.webhook",
        "typeVersion": 2,
        "position": [
          -624,
          -896
        ],
        "id": "dccd66b1-9821-4a65-8a1b-4ee3933e836e",
        "name": "Webhook",
        "webhookId": "dabce202-e7d4-4034-a5b0-8bc05378cef1"
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.cardType }}",
                      "rightValue": "department",
                      "operator": {
                        "type": "string",
                        "operation": "contains"
                      },
                      "id": "a098da97-a9e0-425c-be3a-96f94c24dbe7"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Department"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "c5ae415d-efa3-4d0a-99e7-bc47a32ea478",
                      "leftValue": "={{ $json.cardType }}",
                      "rightValue": "role",
                      "operator": {
                        "type": "string",
                        "operation": "contains"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Role"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          48,
          -1040
        ],
        "id": "a6a2cd75-ee68-491a-b842-4c36675f37a2",
        "name": "Switch Department/Role"
      },
      {
        "parameters": {
          "method": "PATCH",
          "url": "=https://api.teamtailor.com/v1/roles/{{ $node[\"Get item info\"].json[\"tt_role_id\"] }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "content-type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"roles\",\n    \"id\": \"{{ $node['Get item info'].json['tt_role_id'] }}\",\n    \"attributes\": {\n      \"name\": \"{{ $node['Get item info'].json['taskName'] }}\"\n    },\n    \"relationships\": {\n      \"department\": {\n        \"data\": {\n          \"type\": \"departments\",\n          \"id\": \"{{ $json[\"property_tt_department_id\"] }}\"\n        }\n      }\n    }\n  }\n}\n",
          "options": {
            "response": {
              "response": {
                "responseFormat": "json"
              }
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          640,
          -976
        ],
        "id": "0078d829-ae72-41f5-bd2c-ef450421cf93",
        "name": "HTTP - Patch Role info",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "method": "PATCH",
          "url": "=https://api.teamtailor.com/v1/departments/{{$node[\"Get info for Department\"].json[\"property_tt_department_id\"] }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "content-type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"departments\",\n    \"id\": \"{{ $item(\"0\").$node[\"Get info for Department\"].json[\"property_tt_department_id\"] }}\",\n    \"attributes\": {\n      \"name\": \"{{ $item(\"0\").$node[\"Get info for Department\"].json[\"name\"] }}\"\n    }\n  }\n}\n",
          "options": {
            "response": {
              "response": {
                "responseFormat": "json"
              }
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          448,
          -1168
        ],
        "id": "e6e6dff2-a04a-4a48-94d0-87249d343e3b",
        "name": "HTTP - Patch Department info",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const props = $json.body?.data?.properties || {};\n\n// Извлекаем tt_id по имени проперти\nfunction extractTTid(propName) {\n  const prop = props[propName];\n  if (\n    prop &&\n    prop.rich_text &&\n    Array.isArray(prop.rich_text) &&\n    prop.rich_text.length &&\n    prop.rich_text[0].plain_text\n  ) {\n    return prop.rich_text[0].plain_text.trim();\n  }\n  return \"\";\n}\n\n// Приоритет: Task Name → Role → Position\nfunction extractTaskName() {\n  const priority = [\"Task Name\", \"Role\", \"Position\"];\n  for (const key of priority) {\n    const prop = props[key];\n    if (\n      prop &&\n      prop.title &&\n      Array.isArray(prop.title) &&\n      prop.title.length &&\n      prop.title[0].plain_text\n    ) {\n      return prop.title[0].plain_text.trim();\n    }\n  }\n  return \"\";\n}\n\nconst taskId = $json.body?.data?.id || \"\";\n\nconst tt_department_id = extractTTid(\"tt_department_id\");\nconst tt_role_id = extractTTid(\"tt_role_id\");\nconst hasTT_ID = !!(tt_department_id || tt_role_id);\nconst taskName = extractTaskName();\n\n// --- Новый кусок: определение типа карточки\nconst hasRoleField = Object.prototype.hasOwnProperty.call(props, \"tt_role_id\");\nconst hasDepField = Object.prototype.hasOwnProperty.call(props, \"tt_department_id\");\n\nlet cardType = \"\";\nif (hasRoleField && !hasDepField) {\n  cardType = \"role\";\n} else if (hasDepField && !hasRoleField) {\n  cardType = \"department\";\n} else {\n  cardType = \"\";\n}\n\nreturn [{\n  json: {\n    tt_department_id: tt_department_id || \"\",\n    tt_role_id: tt_role_id || \"\",\n    hasTT_ID,\n    taskName,\n    taskId,\n    cardType\n  }\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          -416,
          -896
        ],
        "id": "c5fa40db-e2ba-4c95-bfc4-96d32f3295f1",
        "name": "Get item info"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get item info\"].json[\"taskId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          240,
          -1168
        ],
        "id": "543f1c37-d17d-4c04-81bc-cebdb3453f51",
        "name": "Get info for Department",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get item info\"].json[\"taskId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          240,
          -976
        ],
        "id": "7e78b3ce-00a6-4d43-ba66-64475242061a",
        "name": "Get info Roles",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $json[\"property_department\"][\"0\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          448,
          -976
        ],
        "id": "69634693-cd96-42d1-9eb7-0e59a4e25c03",
        "name": "Get Department info for Update Roles",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "triggerAtHour": 7
              }
            ]
          }
        },
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.2,
        "position": [
          -624,
          -176
        ],
        "id": "743047f1-90de-494b-bd6b-d1d2e86386fb",
        "name": "Schedule Trigger"
      },
      {
        "parameters": {
          "content": "## LIVE - daily sync of verified departments and roles\n****",
          "height": 600,
          "width": 5500,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -656,
          -336
        ],
        "typeVersion": 1,
        "id": "66379b84-5494-48dd-8491-9af4c022b848",
        "name": "Sticky Note5"
      },
      {
        "parameters": {
          "jsCode": "// Получаем массив ID ролей\nconst roles = $node[\"Get info for Department\"].json[\"property_roles\"] || [];\nreturn roles.map(id => ({ json: { roleId: id } }));\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          640,
          -1168
        ],
        "id": "732f6334-5c8b-496b-b651-f291c3a8df23",
        "name": "Split Out Roles"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{$node[\"Split Out Roles\"].json[\"roleId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          864,
          -1168
        ],
        "id": "6a321a3e-342b-44ec-8bae-f7a4e1a712e7",
        "name": "Find role info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "0160894d-8551-418d-9ee3-d08012fd5956",
                "leftValue": "={{ $node[\"Find role info\"].json[\"property_tt_role_id\"] }}",
                "rightValue": "",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          1072,
          -1168
        ],
        "id": "5ddf7d6a-b008-4c16-bbd0-045713d81036",
        "name": "If - Does have Role TT ID?"
      },
      {
        "parameters": {
          "url": "=https://api.teamtailor.com/v1/departments/{{ $item(\"0\").$node[\"Get info for Department\"].json[\"property_tt_department_id\"] }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "options": {
            "response": {
              "response": {
                "responseFormat": "json"
              }
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1264,
          -1280
        ],
        "id": "c8dfeb4e-a1e5-4177-8638-36089161e359",
        "name": "HTTP - Get Department info2",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Получаем notionRoleId ТОЛЬКО ОДИН РАЗ из нужной ноды, потому что он одинаковый для всех проверок\nconst notionRoleId = $item(0).$node[\"If - Does have Role TT ID?\"].json[\"property_tt_role_id\"];\n\n// Получаем все входящие айтемы (TT департаменты)\nconst items = $input.all();\n\n// Для каждого айтема сравниваем наличие ID в ссылках\nreturn items.map(item => {\n  const links = item.json.data?.relationships?.roles?.links || {};\n  const allLinks = Object.values(links).filter(v => typeof v === \"string\");\n  const found = allLinks.some(link => link.includes(notionRoleId));\n\n  return {\n    json: {\n      ...item.json, // опционально: чтобы сохранить весь оригинальный item\n      notionRoleId,\n      links: allLinks,\n      found\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1472,
          -1280
        ],
        "id": "dac49051-8076-4d76-9c1b-76a404d9a604",
        "name": "Does the ID match?"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "0160894d-8551-418d-9ee3-d08012fd5956",
                "leftValue": "={{ $json[\"found\"] }}",
                "rightValue": "",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.if",
        "typeVersion": 2.2,
        "position": [
          1664,
          -1280
        ],
        "id": "748a7d5f-fa88-4b67-aac9-56af88e52ce9",
        "name": "If - Does the ID match?"
      },
      {
        "parameters": {
          "method": "PATCH",
          "url": "=https://api.teamtailor.com/v1/roles/{{$node[\"If - Does have Role TT ID?\"].json[\"property_tt_role_id\"] }}",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "content-type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"roles\",\n    \"id\": \"{{ $node[\"If - Does have Role TT ID?\"].json[\"property_tt_role_id\"] }}\",\n    \"attributes\": {\n      \"name\": \"{{ $node[\"If - Does have Role TT ID?\"].json[\"name\"] }}\"\n    },\n    \"relationships\": {\n      \"department\": {\n        \"data\": {\n          \"type\": \"departments\",\n          \"id\": \"{{ $node[\"HTTP - Get Department info2\"].json[\"data\"][\"id\"] }}\"\n        }\n      }\n    }\n  }\n}\n",
          "options": {
            "response": {
              "response": {
                "responseFormat": "json"
              }
            }
          }
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1888,
          -1200
        ],
        "id": "8d64fae8-f5a5-4e70-ba3d-b2bb3d8a65d1",
        "name": "HTTP - Patch Add Department in Role TT",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.teamtailor.com/v1/roles",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"{{$node[\"If - Does have Role TT ID?\"].json[\"name\"] }}\"\n    },\n    \"relationships\": {\n      \"department\": {\n        \"data\": {\n          \"type\": \"departments\",\n          \"id\": \"{{$node[\"Get info for Department\"].json[\"property_tt_department_id\"] }}\"\n        }\n      }\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1264,
          -1024
        ],
        "id": "40734d80-7283-466c-8943-334642f4e31f",
        "name": "HTTP Request - Create new Role1",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const inputItems = $input.all();\nconst companyId = \"6m5KynaH2o4\";\n\nreturn inputItems.map(item => {\n  // Парсим JSON из строки (!!!)\n  let parsed = {};\n  try {\n    parsed = typeof item.json.data === \"string\"\n      ? JSON.parse(item.json.data)\n      : item.json.data;\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const roleUrl = parsed.data?.links?.self || null;\n  const department_links = parsed.data?.relationships?.department?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/roles/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      department_links,\n      teams_links,\n      roleUrl,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          1472,
          -1024
        ],
        "id": "2de5bf2d-e279-4845-99c4-90a70b2dfae9",
        "name": "TT New Role Parser1"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "update",
          "pageId": {
            "__rl": true,
            "value": "={{$node[\"If - Does have Role TT ID?\"].json[\"id\"] }}",
            "mode": "id"
          },
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_role_id|rich_text",
                "textContent": "={{ $json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1664,
          -1024
        ],
        "id": "ff0394ad-c0f6-4348-92d7-d31d496c4d32",
        "name": "Notion - Add tt_role_id1",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "rules": {
            "values": [
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "leftValue": "={{ $json.cardType }}",
                      "rightValue": "department",
                      "operator": {
                        "type": "string",
                        "operation": "contains"
                      },
                      "id": "a098da97-a9e0-425c-be3a-96f94c24dbe7"
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Department"
              },
              {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "c5ae415d-efa3-4d0a-99e7-bc47a32ea478",
                      "leftValue": "={{ $json.cardType }}",
                      "rightValue": "role",
                      "operator": {
                        "type": "string",
                        "operation": "contains"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "renameOutput": true,
                "outputKey": "Role"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.switch",
        "typeVersion": 3.2,
        "position": [
          48,
          -688
        ],
        "id": "58df63cf-3dcc-4fbb-8376-aabc9d93bf62",
        "name": "Switch Department/Role1"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.teamtailor.com/v1/departments",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"departments\",\n    \"attributes\": {\n      \"name\": \"{{$node[\"Get Item (Department) info\"].json[\"name\"]}}\"\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          448,
          -784
        ],
        "id": "097214a1-ea23-4c13-89cb-cf1c8dce0ccf",
        "name": "HTTP Request - Create new Department1",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "update",
          "pageId": {
            "__rl": true,
            "value": "={{$node[\"Get Item (Department) info\"].json[\"id\"] }}",
            "mode": "id"
          },
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_department_id|rich_text",
                "textContent": "={{ $json.departmentId }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          864,
          -784
        ],
        "id": "e4a979ed-b94f-49e3-89f9-d85a7317528b",
        "name": "Notion - Add tt_department_id1",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "getAll",
          "databaseId": {
            "__rl": true,
            "value": "18b9748b-c8c2-8019-ab80-eee98eac3269",
            "mode": "list",
            "cachedResultName": "Roles and Responsibilities",
            "cachedResultUrl": "https://www.notion.so/18b9748bc8c28019ab80eee98eac3269"
          },
          "returnAll": true,
          "filterType": "manual",
          "matchType": "allFilters",
          "filters": {
            "conditions": [
              {
                "key": "Department|relation",
                "condition": "contains",
                "relationValue": "={{ $node[\"Notion - Add tt_department_id1\"].json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1072,
          -784
        ],
        "id": "5938c6e6-ae40-4767-8d67-02fa7cf47664",
        "name": "Get Notion New Department Roles1",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "method": "PATCH",
          "url": "=https://api.teamtailor.com/v1/roles/{{ $json.property_tt_role_id }}/relationships/department   ",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"departments\",\n    \"id\": \"{{ $node[\"Get Dep Link\"].json[\"departmentId\"] }}\"\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          1264,
          -784
        ],
        "id": "35a7707b-0be6-40d9-b6ff-ac15e2f645a0",
        "name": "HTTP Request - Add Roles to new Department1",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.teamtailor.com/v1/roles",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpBearerAuth",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "X-Api-Version",
                "value": "20240904"
              },
              {
                "name": "Accept",
                "value": "application/vnd.api+json"
              },
              {
                "name": "Content-Type",
                "value": "application/vnd.api+json"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"data\": {\n    \"type\": \"roles\",\n    \"attributes\": {\n      \"name\": \"{{ $node[\"Get Item (Role) info\"].json[\"name\"] }}\"\n    },\n    \"relationships\": {\n      \"department\": {\n        \"data\": {\n          \"type\": \"departments\",\n          \"id\": \"{{ $json[\"property_tt_department_id\"] }}\"\n        }\n      }\n    }\n  }\n}\n",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          640,
          -576
        ],
        "id": "354f8cd5-57f5-4d8e-af79-553325895963",
        "name": "HTTP Request - Create new Role2",
        "credentials": {
          "httpBearerAuth": {
            "id": "JNoBFOypI7HysyPY",
            "name": "TeamTailor"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "const inputItems = $input.all();\nconst companyId = \"6m5KynaH2o4\";\n\nreturn inputItems.map(item => {\n  // Парсим JSON из строки (!!!)\n  let parsed = {};\n  try {\n    parsed = typeof item.json.data === \"string\"\n      ? JSON.parse(item.json.data)\n      : item.json.data;\n  } catch (e) {\n    parsed = {};\n  }\n\n  const id = parsed.data?.id || null;\n  const name = parsed.data?.attributes?.name || null;\n  const type = parsed.data?.type || null;\n  const roleUrl = parsed.data?.links?.self || null;\n  const department_links = parsed.data?.relationships?.department?.links || null;\n  const teams_links = parsed.data?.relationships?.teams?.links || null;\n  const teamtailorUrl = id\n    ? `https://app.teamtailor.com/companies/${companyId}/settings/organization/roles/edit/${id}`\n    : null;\n\n  return {\n    json: {\n      id,\n      name,\n      type,\n      department_links,\n      teams_links,\n      roleUrl,\n      teamtailorUrl\n    }\n  };\n});\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          864,
          -576
        ],
        "id": "3dbfa27a-09e3-4f37-aaeb-5ee62c7dcde9",
        "name": "TT New Role Parser2"
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "update",
          "pageId": {
            "__rl": true,
            "value": "={{$node[\"Get Item (Role) info\"].json[\"id\"] }}",
            "mode": "id"
          },
          "propertiesUi": {
            "propertyValues": [
              {
                "key": "tt_role_id|rich_text",
                "textContent": "={{ $json[\"id\"] }}"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          1072,
          -576
        ],
        "id": "fe4bd78e-1551-4bff-b222-77a7feedb8d3",
        "name": "Notion - Add tt_role_id2",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get item info\"].json[\"taskId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          240,
          -576
        ],
        "id": "cabe950e-3d7c-4a00-82b4-29e2f72fcea0",
        "name": "Get Item (Role) info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $node[\"Get item info\"].json[\"taskId\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          240,
          -784
        ],
        "id": "085882ef-0185-4815-9492-62f18beeaab1",
        "name": "Get Item (Department) info",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      },
      {
        "parameters": {
          "jsCode": "// Жестко прописанный companyId (ваш постоянный)\nconst companyId = \"6m5KynaH2o4\";\n\n// Парсим ответ Teamtailor\nconst raw = items[0].json.data;\nconst parsed = typeof raw === \"string\" ? JSON.parse(raw) : raw;\n\nconst departmentId = parsed.data.id;\nconst departmentName = parsed.data.attributes?.name || \"\";\nconst deptApiLink = parsed.data.links.self;\n\n// Человеческая ссылка для Teamtailor:\nconst teamtailorUrl = `https://app.teamtailor.com/companies/${companyId}/settings/organization/departments/edit/${departmentId}`;\n\nreturn [{\n  json: {\n    departmentId,                    // <-- добавил ID\n    departmentUrl: deptApiLink,      // API-ссылка\n    teamtailorUrl,                   // ссылка для браузера\n    departmentName                   // имя департамента\n  }\n}];\n"
        },
        "type": "n8n-nodes-base.code",
        "typeVersion": 2,
        "position": [
          640,
          -784
        ],
        "id": "3ac51591-033d-41ff-87f0-c36840519ce9",
        "name": "Get Dep Link"
      },
      {
        "parameters": {
          "content": "## LIVE - Updating button information in Notion\n****",
          "height": 1140,
          "width": 2920,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -656,
          -1488
        ],
        "typeVersion": 1,
        "id": "3ae664c4-7167-423a-a4ff-00c9adce5173",
        "name": "Sticky Note6"
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Role successfully created in Teamtailor!* \n\n*Role name:* {{ $node[\"TT New Role Parser1\"].json[\"name\"] }}\nNotion: <{{ $json[\"url\"] }}|Link>  \nTeamtailor: <{{ $node[\"TT New Role Parser1\"].json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          1888,
          -1024
        ],
        "id": "75923bc4-01cd-45a2-85b6-bdd836691fc2",
        "name": "Slack - Send notification - Created new Department Vira Bot",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        }
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Department successfully created in Teamtailor!* \n\n*Department name:* {{ $json[\"departmentName\"] }}\nNotion: <{{ $node[\"Get Department info\"].json[\"url\"] }}|Link>  \nTeamtailor: <{{ $json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          1488,
          -784
        ],
        "id": "1dd60c6d-5a42-40c0-93e5-08354ccb2164",
        "name": "Slack - Send notification - Created new Department Vira Bot1",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        }
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Role successfully created in Teamtailor!* \n\n*Role name:* {{ $node[\"TT New Role Parser2\"].json[\"name\"] }}\nNotion: <{{ $json[\"url\"] }}|Link>  \nTeamtailor: <{{ $node[\"TT New Role Parser2\"].json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          1264,
          -576
        ],
        "id": "beac73a6-9ab1-4da5-b350-a38e0772f278",
        "name": "Slack - Send notification - Created new Department Vira Bot2",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        }
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Department successfully created in Teamtailor!* \n\n*Department name:* {{ $json[\"departmentName\"] }}\nNotion: <{{ $node[\"Get Department info\"].json[\"url\"] }}|Link>  \nTeamtailor: <{{ $json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          1968,
          -160
        ],
        "id": "0191e4d0-7620-43cd-bf5b-d3a0de6a2d86",
        "name": "Slack - Send notification - Created new Department Vira Bot3",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        }
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Department successfully created in Notion!* \n\n*Department name:* {{ $json[\"name\"] }}\nNotion: <{{ $json[\"url\"] }}|Link>  \nTeamtailor: <{{ $node[\"TT Department Parser info\"].json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          1968,
          32
        ],
        "id": "24dfe7f5-ba58-4e37-a419-c58831382d06",
        "name": "Slack - Send notification - Created new Department in Notion Vira Bot",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Role successfully created in Teamtailor!* \n\n*Role name:* {{ $node[\"TT New Role Parser\"].json[\"name\"] }}\nNotion: <{{ $json[\"url\"] }}|Link>  \nTeamtailor: <{{ $node[\"TT New Role Parser\"].json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          4608,
          -144
        ],
        "id": "2ffebcf1-a4ac-4d50-b853-0e7c6980dc6b",
        "name": "Slack - Send notification - Created new Department Vira Bot4",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        }
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C0875TW66M9",
            "mode": "list",
            "cachedResultName": "recruiting-team"
          },
          "text": "=:white_check_mark: *Role successfully created in Notion!* \n\n*Department name:* {{ $json[\"name\"] }}\nNotion: <{{ $json[\"url\"] }}|Link>  \nTeamtailor: <{{ $node[\"TT Role Parser info\"].json[\"teamtailorUrl\"] }}|Link>",
          "otherOptions": {
            "includeLinkToWorkflow": false
          }
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          4608,
          32
        ],
        "id": "5487744c-d208-4722-8fd5-4f6ae36309b6",
        "name": "Slack - Send notification - Created new Role in Notion Vira Bot",
        "webhookId": "7691f4d7-a798-4508-b88d-cd3ad73230ed",
        "credentials": {
          "slackApi": {
            "id": "h4hYe6hY0YHsd0no",
            "name": "Vira Bot"
          }
        },
        "disabled": true
      },
      {
        "parameters": {
          "resource": "databasePage",
          "operation": "get",
          "pageId": {
            "__rl": true,
            "value": "={{ $json[\"property_department\"][\"0\"] }}",
            "mode": "id"
          }
        },
        "type": "n8n-nodes-base.notion",
        "typeVersion": 2.2,
        "position": [
          448,
          -576
        ],
        "id": "4cf67a55-2d81-4fa1-9f08-d9730753f569",
        "name": "Get Department info for Role",
        "credentials": {
          "notionApi": {
            "id": "WFQ5qkbH2adfLXpC",
            "name": "Integration QA Zapier (Notion)"
          }
        }
      }
    ],
    "connections": {
      "Comparison data (departments)": {
        "main": [
          [
            {
              "node": "Switch",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Notion Department": {
        "main": [
          [
            {
              "node": "Clean Data from Notion and TT (Department)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Team Tailor - Get All Departments": {
        "main": [
          [
            {
              "node": "Get Notion Department",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "All Extra Notion Department",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "All Extra Notion Department": {
        "main": [
          [
            {
              "node": "Get Department info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Department info": {
        "main": [
          [
            {
              "node": "HTTP Request - Create new Department",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Create new Department": {
        "main": [
          [
            {
              "node": "Get Link",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Link": {
        "main": [
          [
            {
              "node": "Notion - Add tt_department_id",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "All Extra TeamTailor Department": {
        "main": [
          [
            {
              "node": "HTTP - Get Department info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP - Get Department info": {
        "main": [
          [
            {
              "node": "TT Department Parser info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT Department Parser info": {
        "main": [
          [
            {
              "node": "Notion - Create Department",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Add tt_department_id": {
        "main": [
          [
            {
              "node": "Get Notion New Department Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Create Department": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department in Notion Vira Bot",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Team Tailor - Get All Roles": {
        "main": [
          [
            {
              "node": "Get Notion Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Notion Roles": {
        "main": [
          [
            {
              "node": "Clean Data from Notion and TT (Roles)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Clean Data from Notion and TT (Roles)": {
        "main": [
          [
            {
              "node": "Comparison data (Roles)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Clean Data from Notion and TT (Department)": {
        "main": [
          [
            {
              "node": "Comparison data (departments)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Comparison data (Roles)": {
        "main": [
          [
            {
              "node": "Switch1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch1": {
        "main": [
          [],
          [
            {
              "node": "All Extra Notion Role",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "All Extra Notion Role": {
        "main": [
          [
            {
              "node": "Get role info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get role info": {
        "main": [
          [
            {
              "node": "Get role-department info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Create new Role": {
        "main": [
          [
            {
              "node": "TT New Role Parser",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get role-department info": {
        "main": [
          [
            {
              "node": "HTTP Request - Create new Role",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT New Role Parser": {
        "main": [
          [
            {
              "node": "Notion - Add tt_role_id",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Add tt_role_id": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department Vira Bot4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "All Extra TeamTailor Role": {
        "main": [
          [
            {
              "node": "HTTP - Get Role info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP - Get Role info": {
        "main": [
          [
            {
              "node": "TT Role Parser info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT Role Parser info": {
        "main": [
          [
            {
              "node": "HTTP - Get Department info1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Create New Role": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Role in Notion Vira Bot",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP - Get Department info1": {
        "main": [
          [
            {
              "node": "TT Department Parser info1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT Department Parser info1": {
        "main": [
          [
            {
              "node": "Notion - Create New Role",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Merge": {
        "main": [
          [
            {
              "node": "HTTP Team Tailor - Get All Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Notion New Department Roles": {
        "main": [
          [
            {
              "node": "HTTP Request - Add Roles to new Department",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Add Roles to new Department": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department Vira Bot3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If - Does have TT ID?": {
        "main": [
          [
            {
              "node": "Switch Department/Role",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Switch Department/Role1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Webhook": {
        "main": [
          [
            {
              "node": "Get item info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch Department/Role": {
        "main": [
          [
            {
              "node": "Get info for Department",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Get info Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP - Patch Department info": {
        "main": [
          [
            {
              "node": "Split Out Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get item info": {
        "main": [
          [
            {
              "node": "If - Does have TT ID?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get info for Department": {
        "main": [
          [
            {
              "node": "HTTP - Patch Department info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get info Roles": {
        "main": [
          [
            {
              "node": "Get Department info for Update Roles",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Department info for Update Roles": {
        "main": [
          [
            {
              "node": "HTTP - Patch Role info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Schedule Trigger": {
        "main": [
          [
            {
              "node": "HTTP Team Tailor - Get All Departments",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Out Roles": {
        "main": [
          [
            {
              "node": "Find role info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Find role info": {
        "main": [
          [
            {
              "node": "If - Does have Role TT ID?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If - Does have Role TT ID?": {
        "main": [
          [
            {
              "node": "HTTP - Get Department info2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "HTTP Request - Create new Role1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP - Get Department info2": {
        "main": [
          [
            {
              "node": "Does the ID match?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Does the ID match?": {
        "main": [
          [
            {
              "node": "If - Does the ID match?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If - Does the ID match?": {
        "main": [
          [],
          [
            {
              "node": "HTTP - Patch Add Department in Role TT",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Create new Role1": {
        "main": [
          [
            {
              "node": "TT New Role Parser1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT New Role Parser1": {
        "main": [
          [
            {
              "node": "Notion - Add tt_role_id1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Add tt_role_id1": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department Vira Bot",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Switch Department/Role1": {
        "main": [
          [
            {
              "node": "Get Item (Department) info",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Get Item (Role) info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Create new Department1": {
        "main": [
          [
            {
              "node": "Get Dep Link",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Add tt_department_id1": {
        "main": [
          [
            {
              "node": "Get Notion New Department Roles1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Notion New Department Roles1": {
        "main": [
          [
            {
              "node": "HTTP Request - Add Roles to new Department1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Add Roles to new Department1": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department Vira Bot1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request - Create new Role2": {
        "main": [
          [
            {
              "node": "TT New Role Parser2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "TT New Role Parser2": {
        "main": [
          [
            {
              "node": "Notion - Add tt_role_id2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Notion - Add tt_role_id2": {
        "main": [
          [
            {
              "node": "Slack - Send notification - Created new Department Vira Bot2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Item (Role) info": {
        "main": [
          [
            {
              "node": "Get Department info for Role",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Item (Department) info": {
        "main": [
          [
            {
              "node": "HTTP Request - Create new Department1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Dep Link": {
        "main": [
          [
            {
              "node": "Notion - Add tt_department_id1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Slack - Send notification - Created new Department Vira Bot3": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            }
          ]
        ]
      },
      "Slack - Send notification - Created new Department in Notion Vira Bot": {
        "main": [
          []
        ]
      },
      "Get Department info for Role": {
        "main": [
          [
            {
              "node": "HTTP Request - Create new Role2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "templateCredsSetupCompleted": true,
      "instanceId": "db8c34fa8115e7968d24f8e10f4a110dda7aba2143d2fb70a8ce47f420de93d6"
    }
  }